from setuptools import setup
import setuptools
from pathlib import Path

this_directory = Path(__file__).parent

setup(
    name='flask-securelogin',
    version='0.1.0',
    description='A Flask-based installable library that provides secure login capabilities with SMS and auth tokens.',
    # long_description = (this_directory / "README.rst").read_text(),
    long_description_content_type="text/markdown",
    url='https://github.com/brilliance-qian/flask-securelogin',
    author='Brilliance Qian',
    author_email='bqian@oss.net',
    license_files=('LICENSE.txt',),
    packages=setuptools.find_packages(),
    install_requires=[
        'aiohttp==3.8.4',
        'aiohttp-retry==2.8.3',
        'aiosignal==1.3.1',
        'alembic==1.10.4',
        'async-timeout==4.0.2',
        'attrs==23.1.0',
        'Babel==2.12.1',
        'bcrypt==4.0.1',
        'certifi==2022.12.7',
        'charset-normalizer==3.1.0',
        'click==8.1.3',
        'exceptiongroup==1.1.1',
        'Flask==2.2.3',
        'flask-babel==3.1.0',
        'flask-blueprint==1.3.0',
        'Flask-JWT-Extended==4.4.4',
        'Flask-Migrate==4.0.4',
        'Flask-SQLAlchemy==3.0.3',
        'frozenlist==1.3.3',
        'greenlet==2.0.2',
        'idna==3.4',
        'importlib-metadata==6.6.0',
        'importlib-resources==5.12.0',
        'iniconfig==2.0.0',
        'itsdangerous==2.1.2',
        'Jinja2==3.1.2',
        'Mako==1.2.4',
        'MarkupSafe==2.1.2',
        'multidict==6.0.4',
        'packaging==23.1',
        'pluggy==1.0.0',
        'PyJWT==2.6.0',
        'pytest==7.3.1',
        'pytest-mock==3.10.0',
        'python-dateutil==2.8.2',
        'python-dotenv==1.0.0',
        'pytz==2023.3',
        'requests==2.29.0',
        'six==1.16.0',
        'SQLAlchemy==2.0.10',
        'tencentcloud-sdk-python==3.0.884',
        'time-machine==2.9.0',
        'tomli==2.0.1',
        'twilio==8.1.0',
        'typing-extensions==4.5.0',
        'urllib3==1.26.15',
        'Werkzeug==2.2.3',
        'yarl==1.9.2',
        'zipp==3.15.0',
    ],

    classifiers=[
        'Development Status :: 1 - Planning',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
    ],
    extras_require={
        "test": [
            "pytest",
            "pytest-cov",
            "pytest-clarity",
            'mock;python_version>="3.7"']
    }
)
